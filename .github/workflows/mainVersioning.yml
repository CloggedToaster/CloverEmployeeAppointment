name: Release Minor Version on Main

on:
  push:
    branches:
      - main

jobs:
  release-minor:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Extract Base Version
        id: extract_base_version
        run: |
          BASE_VERSION=$(grep 'version=' gradle.properties | cut -d'=' -f2)
          echo "Base Version: $BASE_VERSION"
          echo "::set-output name=BASE_VERSION::$BASE_VERSION"

      - name: Increment Minor Version
        id: increment_minor
        run: |
          # Extract components of the base version
          MAJOR=$(echo "${{ steps.extract_base_version.outputs.BASE_VERSION }}" | cut -d'.' -f1)
          MINOR=$(echo "${{ steps.extract_base_version.outputs.BASE_VERSION }}" | cut -d'.' -f2)
          PATCH=$(echo "${{ steps.extract_base_version.outputs.BASE_VERSION }}" | cut -d'.' -f3)

          # Increment the minor version component
          ((MINOR++))

          # Form the updated version
          UPDATED_VERSION="$MAJOR.$MINOR.$PATCH"

          # Update the gradle.properties file with the new version
          sed -i "s/version=.*$/version=$UPDATED_VERSION/" gradle.properties
          echo "Incremented Minor Version: $UPDATED_VERSION"
          echo "::set-output name=NEW_VERSION::$UPDATED_VERSION"

      - name: Create GitHub Package Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.increment_minor.outputs.NEW_VERSION }}
          release_name: Release v${{ steps.increment_minor.outputs.NEW_VERSION }}
          body: |
            Automatic minor version release: v${{ steps.increment_minor.outputs.NEW_VERSION }}
          draft: false
          prerelease: false
