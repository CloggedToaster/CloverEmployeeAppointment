name: Release Version

on:
  push:
    branches:
      - main
      - develop

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Determine Version Increment
        id: determine_version
        run: |
          VERSION_PART=$(git log --format=%B -n 1 ${{ github.event.before }}..${{ github.sha }} | grep -o -E '\[(major|minor|patch)\]')
          if [ -z "$VERSION_PART" ]; then
            VERSION_PART="1.0.0" # Fallback version if no keyword is found
          fi
          echo "::set-output name=version_part::$VERSION_PART"


      - name: Increment Version
        id: increment_version
        run: |
          # Get the current version
          CURRENT_VERSION=$(./gradlew properties | grep "version:" | awk '{ print $2 }')
          
          # Use Gradle to increment the version based on determined part
          case ${{ steps.determine_version.outputs.version_part }} in
            major)
              NEW_VERSION=$(./gradlew release -Prelease.scope=major -q currentVersion)
              ;;
            minor)
              NEW_VERSION=$(./gradlew release -Prelease.scope=minor -q currentVersion)
              ;;
            patch)
              NEW_VERSION=$(./gradlew release -Prelease.scope=patch -q currentVersion)
              ;;
            *)
              echo "No version part found or unrecognized. Exiting."
              exit 1
              ;;
          esac

          echo "::set-output name=new_version::$NEW_VERSION"

      - name: Tag Release
        if: steps.increment_version.outputs.new_version != ''
        run: |
          git tag v${{ steps.increment_version.outputs.new_version }}
          git push --tags
